class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
       
      int flag;int max_so_far,curr_max; 
       if(arr.size() == 1)
           return 1;
       else if(arr[1]>arr[0])
           flag=1;
       else if(arr[1]<arr[0])
           flag=0;
       else flag=2;
       
        max_so_far=curr_max=(flag!=2?2:1);
         
        for(int i=2;i<arr.size();i++)
        {
            if((flag==1 && arr[i]<arr[i-1]) || (flag==0 && arr[i]>arr[i-1]))
            {
                curr_max+=1;
                flag = !flag;
            }     
            else if((flag==1 && arr[i]>arr[i-1]) || (!flag && arr[i]<arr[i-1]))
              curr_max=2;
            else if(flag==2)
            {
              if(arr[i]>arr[i-1])
                  flag=1;
              else if(arr[i]<arr[i-1])
                  flag=0;             
              curr_max=flag!=2?2:1;                 
            }
            else
            {
              flag=2;
              curr_max=1; 
            }
            max_so_far=max(max_so_far,curr_max);
        }    
        return max_so_far;
    }
};
