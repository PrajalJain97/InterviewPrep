class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
	if (nums.size() < 3)    return {};
	sort(nums.begin(), nums.end());

	vector<vector<int>> result;
	for (int k = 0; k < nums.size() - 2; ++k){
		if (nums[k] > 0)    break;
		if (k > 0 && nums[k] == nums[k - 1])    continue; // avoid repeat element
		int i = k + 1, j = nums.size() - 1;
		while (i < j){
			if (nums[i] + nums[j] + nums[k] > 0)    j--;
			else if (nums[i] + nums[j] + nums[k] < 0) i++;
			else{ // a feasible solution
				result.push_back(vector<int>{nums[k], nums[i], nums[j]});
				while(i < j && nums[j] == nums[j - 1])  j--; // avoid repeat element
				while(i < j && nums[i] == nums[i + 1])  i++; // avoid repeat element
				i++, j--;
			}
		}
	}
	return result;
}
};
